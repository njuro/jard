# Port on which the API will be running
server.port=${PORT:8081}
# Some of the dependencies have circular dependencies
spring.main.allow-circular-references=true
# How much of exception details should be propagated to client
server.error.include-binding-errors=never
server.error.include-message=never
server.error.include-stacktrace=never
server.error.include-exception=false
# Database configuration and credentials
spring.datasource.url=${JDBC_DATABASE_URL}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.username=${JDBC_DATABASE_USERNAME}
spring.datasource.password=${JDBC_DATABASE_PASSWORD}
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.jdbc.time_zone=UTC
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQL10Dialect
spring.jpa.properties.hibernate.search.enabled=true
spring.jpa.properties.hibernate.search.backend.lucene_version=LATEST
spring.jpa.properties.hibernate.search.backend.analysis.configurer=class:com.github.njuro.jard.search.SearchAnalysisConfigurer
spring.jpa.properties.hibernate.search.backend.directory.root=./lucene_index
spring.jpa.open-in-view=false
# Restriction of total request size (size limits for single files are configured in application)
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
# Logging level for application
logging.file.name=jard.log
logging.level.com.github.njuro.jard=debug
logging.level.org.ffmpeg=off
logging.level.org.springframework.boot.autoconfigure.thymeleaf=error
logging.level.org.apache.http.client.protocol.ResponseProcessCookies=error
# Caching & Rate limiting
spring.cache.jcache.config=classpath:ehcache.xml
bucket4j.enabled=true
bucket4j.filters[0].cache-name=buckets
bucket4j.filters[0].url=.*/api/(?!usercontent).*
bucket4j.filters[0].rate-limits[0].expression=getRemoteAddr()
bucket4j.filters[0].rate-limits[0].bandwidths[0].capacity=20
bucket4j.filters[0].rate-limits[0].bandwidths[0].time=10
bucket4j.filters[0].rate-limits[0].bandwidths[0].unit=seconds
# Spring Actuator
management.endpoints.web.base-path=/actuator
management.info.env.enabled=true
management.info.git.enabled=true
management.info.build.enabled=true
management.endpoints.enabled-by-default=false
management.endpoints.jmx.exposure.exclude=*
management.endpoints.web.exposure.include=*
management.endpoints.web.cors.allow-credentials=true
management.endpoints.web.cors.allowed-origins=${client.base.url},${server.base.url}
management.endpoints.web.cors.allowed-methods=GET,POST,OPTIONS
management.endpoint.caches.enabled=true
management.endpoint.configprops.enabled=false
management.endpoint.env.enabled=false
management.endpoint.flyway.enabled=true
management.endpoint.info.enabled=true
management.endpoint.health.enabled=true
management.endpoint.health.show-details=always
management.endpoint.httptrace.enabled=true
management.endpoint.metrics.enabled=true
management.endpoint.mappings.enabled=true
management.endpoint.scheduledtasks.enabled=true
management.endpoint.sessions.enabled=true
management.endpoint.logfile.enabled=true
management.endpoint.loggers.enabled=true
# Spring Boot Admin
spring.boot.admin.context-path=/sba
spring.boot.admin.client.instance.name=jard
spring.boot.admin.client.url=http://localhost:${server.port}${spring.boot.admin.context-path}
# E-mail (SMTP server)
# The "false" fallback value here is so that mailer is not autowired when SMTP_SERVER_HOST environment variable is undefined
spring.mail.host=${SMTP_SERVER_HOST:false}
spring.mail.port=${SMTP_SERVER_PORT}
spring.mail.username=${SMTP_SERVER_USERNAME}
spring.mail.password=${SMTP_SERVER_PASSWORD}
# Application specific settings
app.jwt.secret=${JWT_SECRET}
app.jwt.expiration=604800
client.base.url=${CLIENT_BASE_URL:''}
server.base.url=${SERVER_BASE_URL:''}
app.user.content.storage=${USER_CONTENT_STORAGE}
app.user.root.enabled=${ROOT_ENABLED}
app.user.root.username=${ROOT_USERNAME:''}
app.user.root.password=${ROOT_PASSWORD:''}
app.aws.s3.region=${AWS_S3_REGION}
app.aws.s3.bucket=${AWS_S3_BUCKET}
app.aws.accesskey=${AWS_ACCESS_KEY}
app.aws.secretkey=${AWS_SECRET_KEY}
app.sba.secret=${SBA_SECRET}
app.hcaptcha.secret=${HCAPTCHA_SECRET:'0x0000000000000000000000000000000000000000'}
app.mail.sender=${SMTP_SERVER_SENDER}
app.mail.sender.alias=${SMTP_SERVER_SENDER_ALIAS:jard}

