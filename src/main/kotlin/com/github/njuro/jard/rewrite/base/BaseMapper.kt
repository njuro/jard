package com.github.njuro.jard.rewrite.base

import org.mapstruct.InjectionStrategy.CONSTRUCTOR
import org.mapstruct.MapperConfig
import org.mapstruct.MappingInheritanceStrategy.AUTO_INHERIT_ALL_FROM_CONFIG
import org.mapstruct.MappingTarget
import org.mapstruct.ReportingPolicy.IGNORE
import org.springframework.stereotype.Component

/**
 * Base mapper for mapping instances of [BaseEntity] and [BaseDto] and vice versa.
 * Implementations of mapping methods are generated by MapStruct library on project compile.
 */
@Component
interface BaseMapper<ENTITY : BaseEntity, DTO : BaseDto> {
    /**
     * Mapping config to be used by all inheriting mappers (needs to be set explicitly via [Mapper.config]
     */
    @MapperConfig(
        unmappedTargetPolicy = IGNORE,
        mappingInheritanceStrategy = AUTO_INHERIT_ALL_FROM_CONFIG,
        componentModel = "spring",
        injectionStrategy = CONSTRUCTOR
    )
    object Config

    fun toDto(entity: ENTITY): DTO
    fun toDtoList(entityList: List<ENTITY>): List<DTO>
    fun toEntity(dto: DTO): ENTITY
    fun toExistingEntity(dto: DTO, @MappingTarget existingEntity: ENTITY): ENTITY
    fun toEntityList(dtoList: List<DTO>): List<ENTITY>
}
